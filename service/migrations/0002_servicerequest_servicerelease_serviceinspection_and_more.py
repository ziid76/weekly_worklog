# Generated by Django 5.1.6 on 2025-08-14 03:46

import django.db.models.deletion
import service.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('service', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ServiceRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('req_title', models.TextField(blank=True, verbose_name='제목')),
                ('req_system', models.TextField(blank=True, choices=[], null=True, verbose_name='요청시스템')),
                ('req_module', models.TextField(blank=True, choices=[], null=True, verbose_name='요청모듈')),
                ('req_depart', models.TextField(blank=True, verbose_name='요청부서')),
                ('req_name', models.TextField(blank=True, verbose_name='요청자')),
                ('req_email', models.TextField(blank=True, verbose_name='요청자 email')),
                ('req_reason', models.TextField(blank=True, verbose_name='요청사유')),
                ('req_details', models.TextField(blank=True, verbose_name='요청내용')),
                ('rcv_opinion', models.TextField(blank=True, verbose_name='담당부서의견')),
                ('date_of_req', models.DateField(blank=True, null=True, verbose_name='희망적용일자')),
                ('date_of_recept', models.DateField(auto_now_add=True, verbose_name='접수일자')),
                ('split_msg', models.TextField(blank=True, verbose_name='분할메시지')),
                ('split_date_of_due', models.DateField(blank=True, null=True, verbose_name='분할SR완료요청일자')),
                ('date_of_due', models.DateField(blank=True, null=True, verbose_name='완료예정일자')),
                ('date_of_complete', models.DateField(blank=True, null=True, verbose_name='완료일자')),
                ('complete_content', models.TextField(blank=True, verbose_name='처리결과')),
                ('reject_reason', models.TextField(blank=True, verbose_name='처리결과')),
                ('effort_expected', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='예상 작업 시간(M/H)')),
                ('effort', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='예상 작업 시간(M/H)')),
                ('status', models.CharField(blank=True, choices=[('N', '요청접수'), ('P', '처리중'), ('G', '처리완료'), ('D', '처리불가')], default='N', max_length=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assignee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_requests', to=settings.AUTH_USER_MODEL, verbose_name='담당자')),
                ('parent_sr', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='child_srs', to='service.servicerequest', verbose_name='원 SR')),
                ('req_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='service.commoncode')),
                ('req_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceRelease',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('release_date', models.DateField(verbose_name='반영 요청일자')),
                ('source_system', models.CharField(max_length=100, verbose_name='Source System')),
                ('target_system', models.CharField(max_length=100, verbose_name='Target System')),
                ('request_number', models.CharField(blank=True, max_length=100, verbose_name='요청번호')),
                ('description', models.TextField(blank=True, verbose_name='설명')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('approved', models.BooleanField(default=False, verbose_name='승인 여부')),
                ('approved_at', models.DateTimeField(blank=True, null=True, verbose_name='승인 일시')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_releases', to=settings.AUTH_USER_MODEL, verbose_name='승인자')),
                ('service_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='releases', to='service.servicerequest', verbose_name='서비스 요청')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceInspection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seq', models.IntegerField(blank=True, null=True, verbose_name='일련번호')),
                ('inspector_name', models.CharField(max_length=100, verbose_name='검수 담당자')),
                ('inspector_email', models.EmailField(max_length=254, verbose_name='검수 담당자 이메일')),
                ('dev_test_detail', models.TextField(verbose_name='개발담당자 테스트 내역')),
                ('test_request', models.TextField(verbose_name='테스트 요청 사항')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('token', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('test_result', models.TextField(blank=True, verbose_name='테스트 결과')),
                ('result', models.CharField(blank=True, choices=[('C', '완료'), ('R', '재작업')], max_length=1, null=True, verbose_name='결과')),
                ('result_at', models.DateTimeField(blank=True, null=True)),
                ('service_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inspections', to='service.servicerequest', verbose_name='서비스 요청')),
            ],
            options={
                'ordering': ['seq'],
            },
        ),
        migrations.CreateModel(
            name='ServiceRequestAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to=service.models.service_directory_path)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='service.servicerequest')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceRequestStep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('step_time', models.DateTimeField(auto_now_add=True, verbose_name='처리 시간')),
                ('content', models.TextField(verbose_name='처리 내용')),
                ('status', models.TextField(blank=True, choices=[('N', '요청접수'), ('P', '처리중'), ('G', '처리완료'), ('D', '처리불가')], null=True, verbose_name='처리상태')),
                ('service_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='steps', to='service.servicerequest', verbose_name='서비스 요청')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='처리자')),
            ],
        ),
    ]
